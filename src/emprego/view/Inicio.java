/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package emprego.view;

import emprego.Banco;
import emprego.model.Profissional;
import emprego.model.Usuario;
import java.awt.Color;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.DefaultListModel;
import javax.swing.JOptionPane;
import javax.swing.border.CompoundBorder;

/**
 *
 * @author gcamargo
 */
public class Inicio extends javax.swing.JFrame {
    List<Profissional> listadeprofissionais = new ArrayList<>();
    List<Usuario> listaUsuarios = new ArrayList<>();

    /**
     * Creates new form Inicio
     */
    public Inicio() {
        initComponents();
        this.setLocationRelativeTo(null);
        this.setTitle("Empre GO - Início");
        jMenuCompletarCadastro.setBorderPainted(false);
        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabelInicioLogo = new javax.swing.JLabel();
        jLabelEventosRecentes = new javax.swing.JLabel();
        jLabelBoasVindas = new javax.swing.JLabel();
        jLabelNomeUsuario = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jListEventosRecentes = new javax.swing.JList<>();
        jMenuBar1 = new javax.swing.JMenuBar();
        jMenuCompletarCadastro = new javax.swing.JMenu();
        jMenuPerfil = new javax.swing.JMenu();
        jSeparator3 = new javax.swing.JPopupMenu.Separator();
        jMenuItemEditar = new javax.swing.JMenuItem();
        jSeparator5 = new javax.swing.JPopupMenu.Separator();
        jMenuItemVisualizar = new javax.swing.JMenuItem();
        jSeparator4 = new javax.swing.JPopupMenu.Separator();
        jMenuSolicitacoes = new javax.swing.JMenu();
        jMenuConta = new javax.swing.JMenu();
        jSeparator1 = new javax.swing.JPopupMenu.Separator();
        jMenuItemExcluir = new javax.swing.JMenuItem();
        jSeparator2 = new javax.swing.JPopupMenu.Separator();
        jMenuItemSair = new javax.swing.JMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                formComponentShown(evt);
            }
        });
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowActivated(java.awt.event.WindowEvent evt) {
                formWindowActivated(evt);
            }
        });

        jLabelInicioLogo.setFont(new java.awt.Font("Dialog", 1, 48)); // NOI18N
        jLabelInicioLogo.setText("Empre GO");

        jLabelEventosRecentes.setText("Eventos Recentes");

        jLabelBoasVindas.setFont(new java.awt.Font("Dialog", 1, 11)); // NOI18N
        jLabelBoasVindas.setText("Seja Bem Vindo:");

        jLabelNomeUsuario.setFont(new java.awt.Font("DejaVu Serif", 1, 11)); // NOI18N
        jLabelNomeUsuario.addComponentListener(new java.awt.event.ComponentAdapter() {
            public void componentShown(java.awt.event.ComponentEvent evt) {
                jLabelNomeUsuarioComponentShown(evt);
            }
        });

        jListEventosRecentes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jListEventosRecentesMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(jListEventosRecentes);

        jMenuCompletarCadastro.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(255, 0, 0)));
        jMenuCompletarCadastro.setText("Completar Perfil");
        jMenuCompletarCadastro.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jMenuCompletarCadastro.addMenuListener(new javax.swing.event.MenuListener() {
            public void menuSelected(javax.swing.event.MenuEvent evt) {
                jMenuCompletarCadastroMenuSelected(evt);
            }
            public void menuDeselected(javax.swing.event.MenuEvent evt) {
            }
            public void menuCanceled(javax.swing.event.MenuEvent evt) {
            }
        });
        jMenuCompletarCadastro.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenuCompletarCadastroMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                jMenuCompletarCadastroMouseEntered(evt);
            }
        });
        jMenuCompletarCadastro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuCompletarCadastroActionPerformed(evt);
            }
        });
        jMenuBar1.add(jMenuCompletarCadastro);

        jMenuPerfil.setText("Perfil");
        jMenuPerfil.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenuPerfilMouseClicked(evt);
            }
        });
        jMenuPerfil.add(jSeparator3);

        jMenuItemEditar.setText("Editar");
        jMenuItemEditar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemEditarActionPerformed(evt);
            }
        });
        jMenuPerfil.add(jMenuItemEditar);
        jMenuPerfil.add(jSeparator5);

        jMenuItemVisualizar.setText("Visualizar");
        jMenuItemVisualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemVisualizarActionPerformed(evt);
            }
        });
        jMenuPerfil.add(jMenuItemVisualizar);
        jMenuPerfil.add(jSeparator4);

        jMenuBar1.add(jMenuPerfil);

        jMenuSolicitacoes.setText("Solicitações");
        jMenuSolicitacoes.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jMenuBar1.add(jMenuSolicitacoes);

        jMenuConta.setText("Conta");
        jMenuConta.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jMenuConta.add(jSeparator1);

        jMenuItemExcluir.setText("Excluir");
        jMenuConta.add(jMenuItemExcluir);
        jMenuConta.add(jSeparator2);

        jMenuItemSair.setText("Sair");
        jMenuItemSair.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jMenuItemSairMouseClicked(evt);
            }
        });
        jMenuItemSair.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jMenuItemSairActionPerformed(evt);
            }
        });
        jMenuConta.add(jMenuItemSair);

        jMenuBar1.add(jMenuConta);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 367, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(layout.createSequentialGroup()
                            .addGap(57, 57, 57)
                            .addComponent(jLabelInicioLogo))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(120, 120, 120)
                            .addComponent(jLabelEventosRecentes))
                        .addGroup(layout.createSequentialGroup()
                            .addGap(116, 116, 116)
                            .addComponent(jLabelNomeUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 263, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(jLabelBoasVindas))))
                .addContainerGap(21, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabelInicioLogo)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabelEventosRecentes)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabelBoasVindas)
                    .addComponent(jLabelNomeUsuario, javax.swing.GroupLayout.PREFERRED_SIZE, 14, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 280, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(29, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jMenuItemSairMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuItemSairMouseClicked
        Login inicio = new Login();
        inicio.setVisible(true);
        this.dispose();

    }//GEN-LAST:event_jMenuItemSairMouseClicked

    private void formComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_formComponentShown
        try {
            Banco verifica = new Banco();

            jLabelNomeUsuario.setText(String.valueOf(verifica.getNomeUsuario()));
            if (verifica.verificarCadastro()) {
                JOptionPane.showMessageDialog(null, "Por favor complete seu cadastro.");
                Banco.completarUsuario = true;
                jMenuCompletarCadastro.setBorderPainted(true);

                Class.forName("com.mysql.jdbc.Driver");

                Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/EmpreGO?zeroDateTimeBehavior=convertToNull", "root", "e2n5b4");
                String sql = "select * from Usuario  ;";
                //Executa a query de inserção
                java.sql.Statement st = conn.createStatement();

                ResultSet rs;
                rs = st.executeQuery(sql);
                rs.next();
                int i = 0;
                do {

                    Usuario novoUsuario = new Usuario();
                    novoUsuario.setIdUsuario(rs.getInt(1));
                    novoUsuario.setNome(rs.getString(2));
                    novoUsuario.setData_nascimento(rs.getString(3));
                    novoUsuario.setEmail(rs.getString(4));
                    novoUsuario.setDataregistro(rs.getDate(5));
                    novoUsuario.setUltimologin(rs.getDate(6));
                    novoUsuario.setSenha(rs.getString(7));
                    novoUsuario.setCompleto(rs.getInt(8));
                    i = i + 1;
                    rs.next();

                    listaUsuarios.add(novoUsuario);
                } while (rs.next() != false);
                DefaultListModel modelList = new DefaultListModel();
                if (listaUsuarios == null) {
                    JOptionPane.showMessageDialog(null, "Não encontrado.");
                } else {
                    for (Usuario imovel1 : listaUsuarios) {
                        modelList.addElement(imovel1.toString());
                    }
                    jListEventosRecentes.setModel(modelList);
                }

            } else {
                jMenuCompletarCadastro.setBorderPainted(false);
                jMenuCompletarCadastro.setVisible(false);
                Banco.completarUsuario = false;
                Class.forName("com.mysql.jdbc.Driver");

                Connection conn = DriverManager.getConnection("jdbc:mysql://localhost:3306/EmpreGO?zeroDateTimeBehavior=convertToNull", "root", "e2n5b4");
                String sql = "select * from Usuario  ;";
                //Executa a query de inserção
                java.sql.Statement st = conn.createStatement();

                ResultSet rs;
                rs = st.executeQuery(sql);
                int i = 0;
                rs.next();
                do {

                    Usuario novoUsuario = new Usuario();
                    novoUsuario.setIdUsuario(rs.getInt(1));
                    novoUsuario.setNome(rs.getString(2));
                    novoUsuario.setData_nascimento(rs.getString(3));
                    novoUsuario.setEmail(rs.getString(4));
                    novoUsuario.setDataregistro(rs.getDate(5));
                    novoUsuario.setUltimologin(rs.getDate(6));
                    novoUsuario.setSenha(rs.getString(7));
                    novoUsuario.setCompleto(rs.getInt(8));
                    i = i + 1;
                    rs.next();

                    listaUsuarios.add(novoUsuario);
                } while (rs.next() != false);
                DefaultListModel modelList = new DefaultListModel();
                if (listaUsuarios == null) {
                    JOptionPane.showMessageDialog(null, "Não encontrado.");
                } else {
                    for (Usuario imovel1 : listaUsuarios) {
                        modelList.addElement(imovel1.toString());
                    }
                    jListEventosRecentes.setModel(modelList);
                }

            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Inicio.class.getName()).log(Level.SEVERE, null, ex);
        } catch (SQLException ex) {
            Logger.getLogger(Inicio.class.getName()).log(Level.SEVERE, null, ex);
        }


    }//GEN-LAST:event_formComponentShown

    private void formWindowActivated(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowActivated


    }//GEN-LAST:event_formWindowActivated

    private void jLabelNomeUsuarioComponentShown(java.awt.event.ComponentEvent evt) {//GEN-FIRST:event_jLabelNomeUsuarioComponentShown

             }//GEN-LAST:event_jLabelNomeUsuarioComponentShown

    private void jMenuCompletarCadastroMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuCompletarCadastroMouseEntered

    }//GEN-LAST:event_jMenuCompletarCadastroMouseEntered

    private void jMenuCompletarCadastroMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuCompletarCadastroMouseClicked

        Cadastro perfil = new Cadastro();
        perfil.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jMenuCompletarCadastroMouseClicked

    private void jMenuCompletarCadastroMenuSelected(javax.swing.event.MenuEvent evt) {//GEN-FIRST:event_jMenuCompletarCadastroMenuSelected

    }//GEN-LAST:event_jMenuCompletarCadastroMenuSelected

    private void jMenuPerfilMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jMenuPerfilMouseClicked

    }//GEN-LAST:event_jMenuPerfilMouseClicked

    private void jMenuItemSairActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemSairActionPerformed
        Login sair = new Login();
        sair.setVisible(true);
        this.dispose();
    }//GEN-LAST:event_jMenuItemSairActionPerformed

    private void jMenuItemEditarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemEditarActionPerformed
        try {
            Perfil perfil = new Perfil();

            Banco completar = new Banco();
            if (Banco.isUsuario == true) {
                perfil.completarUsuario(completar.montarUsuario());

                perfil.setVisible(true);
                this.dispose();
            } else {
                perfil.completar(completar.montarUsuario(), completar.montarProfissional());

                perfil.setVisible(true);
                this.dispose();
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Inicio.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuItemEditarActionPerformed

    private void jMenuItemVisualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuItemVisualizarActionPerformed
        try {
            Perfil perfil = new Perfil();

            Banco completar = new Banco();
            if (Banco.isUsuario == true) {
                perfil.completarUsuario(completar.montarUsuario());
                
                
                perfil.setVisible(true);
                this.dispose();
            } else {
                perfil.completar(completar.montarUsuario(), completar.montarProfissional());
               
                perfil.setVisible(true);
                this.dispose();
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Inicio.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuItemVisualizarActionPerformed

    private void jListEventosRecentesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jListEventosRecentesMouseClicked
        if (!javax.swing.SwingUtilities.isRightMouseButton(evt) && !javax.swing.SwingUtilities.isMiddleMouseButton(evt)) {try {
            //javax.swing.SwingUtilities.isMiddleMouseButton(evt)){
            String Profissional = jListEventosRecentes.getSelectedValue();
            int escolha = Integer.valueOf(JOptionPane.showInputDialog("Selecione uma opção:\n1- Visualizar Perfil\n2- Solicitar serviço\n0- Cancelar"));
            switch (escolha) {
                case 1:
                    int codigo = getCod(Profissional);
                    Banco ajuda = new Banco();
                    Perfil visualizar = new Perfil();
                    Usuario auxiliar = listaUsuarios.get(codigo);
                    listadeprofissionais = ajuda.listaprofissionais();
                    visualizar.completar(auxiliar, ajuda.procuraProfissional(listadeprofissionais, codigo));
                    visualizar.setVisible(true);
                    this.dispose();
                    break;
                case 2:
                    break;
                case 0:
                    break;
                default:
                    JOptionPane.showMessageDialog(null, "Digite uma opção válida.");
                    break;
            }
            } catch (ClassNotFoundException ex) {
                Logger.getLogger(Inicio.class.getName()).log(Level.SEVERE, null, ex);
            } catch (SQLException ex) {
                Logger.getLogger(Inicio.class.getName()).log(Level.SEVERE, null, ex);
            }
        }

    }//GEN-LAST:event_jListEventosRecentesMouseClicked

    private void jMenuCompletarCadastroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jMenuCompletarCadastroActionPerformed
        try {
            Perfil perfil = new Perfil();

            Banco completar = new Banco();
            if (Banco.isUsuario == true) {
                perfil.completarUsuario(completar.montarUsuario());
                perfil.desativarCampos();
                perfil.setVisible(true);
                this.dispose();
            } else {
                perfil.completar(completar.montarUsuario(), completar.montarProfissional());
                perfil.desativarCampos();
                perfil.setVisible(true);
                this.dispose();
            }
        } catch (ClassNotFoundException ex) {
            Logger.getLogger(Inicio.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jMenuCompletarCadastroActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Inicio.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Inicio().setVisible(true);
            }
        });
    }
    private int getCod(String cod) {
        int end = 0;
        for (int i = 0; i < cod.length(); i++) {
            if (cod.charAt(i) == '-') {
                end = i - 1;
                break;
            }
        }

        cod = cod.substring(0, end);
        return Integer.parseInt(cod);
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabelBoasVindas;
    private javax.swing.JLabel jLabelEventosRecentes;
    private javax.swing.JLabel jLabelInicioLogo;
    private javax.swing.JLabel jLabelNomeUsuario;
    private javax.swing.JList<String> jListEventosRecentes;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JMenu jMenuCompletarCadastro;
    private javax.swing.JMenu jMenuConta;
    private javax.swing.JMenuItem jMenuItemEditar;
    private javax.swing.JMenuItem jMenuItemExcluir;
    private javax.swing.JMenuItem jMenuItemSair;
    private javax.swing.JMenuItem jMenuItemVisualizar;
    private javax.swing.JMenu jMenuPerfil;
    private javax.swing.JMenu jMenuSolicitacoes;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPopupMenu.Separator jSeparator1;
    private javax.swing.JPopupMenu.Separator jSeparator2;
    private javax.swing.JPopupMenu.Separator jSeparator3;
    private javax.swing.JPopupMenu.Separator jSeparator4;
    private javax.swing.JPopupMenu.Separator jSeparator5;
    // End of variables declaration//GEN-END:variables
}
